basePath: /api/v1
definitions:
  docs.ApplicationResponse:
    properties:
      expiration_at:
        type: string
      hotel_name:
        type: string
      id:
        type: string
      offer_id:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  docs.AuthResponse:
    properties:
      access_token:
        type: string
      access_ttl:
        type: integer
      refresh_token:
        type: string
      refresh_ttl:
        type: integer
    type: object
  docs.ConfirmReport:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  docs.CreateApplicationRequest:
    properties:
      offer_id:
        type: string
    required:
    - offer_id
    type: object
  docs.CreateApplicationResponse:
    properties:
      application_id:
        type: string
    type: object
  docs.CreateHotelRequest:
    properties:
      location_id:
        type: string
      name:
        type: string
    required:
    - location_id
    - name
    type: object
  docs.CreateHotelResponse:
    properties:
      hotel_id:
        type: string
    type: object
  docs.CreateLocationRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  docs.CreateLocationResponse:
    properties:
      location_id:
        type: string
    type: object
  docs.CreateOfferRequest:
    properties:
      check_in:
        type: string
      check_out:
        type: string
      expiration_at:
        type: string
      hotel_id:
        type: string
      location_id:
        type: string
      participants_limit:
        type: integer
      room_id:
        type: string
      task:
        type: string
    required:
    - check_in
    - check_out
    - expiration_at
    - hotel_id
    - location_id
    - participants_limit
    - room_id
    - task
    type: object
  docs.CreateOfferResponse:
    properties:
      id:
        type: string
    type: object
  docs.CreateRoomRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  docs.CreateRoomResponse:
    properties:
      room_id:
        type: string
    type: object
  docs.GetApplicationsResponse:
    properties:
      applications:
        items:
          $ref: '#/definitions/docs.ApplicationResponse'
        type: array
      pages_count:
        type: integer
    type: object
  docs.GetByApplicationIdResponse:
    properties:
      id:
        type: string
    type: object
  docs.GetHotelsResponse:
    properties:
      hotels:
        items:
          $ref: '#/definitions/docs.HotelResponse'
        type: array
    type: object
  docs.GetLocationsResponse:
    properties:
      locations:
        items:
          $ref: '#/definitions/docs.LocationResponse'
        type: array
    type: object
  docs.GetOffersResponse:
    properties:
      offers:
        items:
          $ref: '#/definitions/docs.OfferResponse'
        type: array
      pages_count:
        type: integer
    type: object
  docs.GetReportsResponse:
    properties:
      pages_count:
        type: integer
      reports:
        items:
          $ref: '#/definitions/docs.ReportResponse'
        type: array
    type: object
  docs.GetRoomsResponse:
    properties:
      rooms:
        items:
          $ref: '#/definitions/docs.RoomResponse'
        type: array
    type: object
  docs.GetUserAppLimitInfoResponse:
    properties:
      active_app_count:
        type: integer
      limit:
        type: integer
    type: object
  docs.HotelResponse:
    properties:
      id:
        type: string
      location_id:
        type: string
      location_name:
        type: string
      name:
        type: string
    type: object
  docs.LocationResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  docs.LogInRequest:
    properties:
      ostrovok_login:
        type: string
      password:
        type: string
    required:
    - ostrovok_login
    - password
    type: object
  docs.OfferResponse:
    properties:
      check_in_at:
        type: string
      check_out_at:
        type: string
      expiration_at:
        type: string
      hotel_id:
        type: string
      hotel_name:
        type: string
      id:
        type: string
      participants_count:
        type: integer
      participants_limit:
        type: integer
      room_id:
        type: string
      room_name:
        type: string
      task:
        type: string
    type: object
  docs.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  docs.ReportImageResponse:
    properties:
      id:
        type: string
      link:
        type: string
    type: object
  docs.ReportResponse:
    properties:
      check_in_at:
        type: string
      check_out_at:
        type: string
      expiration_at:
        type: string
      hotel_name:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/docs.ReportImageResponse'
        type: array
      location_name:
        type: string
      room_name:
        type: string
      status:
        type: string
      task:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  docs.RoomResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  docs.SignUpRequest:
    properties:
      email:
        type: string
      ostrovok_login:
        type: string
      password:
        type: string
    required:
    - email
    - ostrovok_login
    - password
    type: object
  docs.UpdateOfferRequest:
    properties:
      check_in_at:
        type: string
      check_out_at:
        type: string
      expiration_at:
        type: string
      hotel_id:
        type: string
      room_id:
        type: string
      task:
        type: string
    type: object
  docs.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      ostrovok_login:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: API for "Secret Guest" app
  title: Secret Guest API
  version: "1.0"
paths:
  /application/:
    get:
      description: GetForPage all applications with pagination
      parameters:
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of applications
          schema:
            $ref: '#/definitions/docs.GetApplicationsResponse'
        "400":
          description: Invalid data for getting applications
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for reviewer
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage applications
      tags:
      - Application
    post:
      consumes:
      - application/json
      description: Creates application for given offer
      parameters:
      - description: Data for creating offer
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.CreateApplicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created application data
          schema:
            $ref: '#/definitions/docs.CreateApplicationResponse'
        "400":
          description: Invalid data for creating offer
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for reviewer
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create application
      tags:
      - Application
  /application/{id}:
    get:
      description: GetForPage application by id
      parameters:
      - description: Id of requested application
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requested application
          schema:
            $ref: '#/definitions/docs.ApplicationResponse'
        "400":
          description: Invalid data for getting application by id
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: User is not reviewer or application does not belong to user
        "404":
          description: Application with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage by id
      tags:
      - Application
  /application/limit:
    get:
      description: GetUserAppLimitInfo get info about limit and active app
      produces:
      - application/json
      responses:
        "200":
          description: Info about limit and active app
          schema:
            $ref: '#/definitions/docs.GetUserAppLimitInfoResponse'
        "400":
          description: Invalid data for getting info
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: User is not reviewer or application does not belong to user
        "404":
          description: User not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetUserAppLimitInfo
      tags:
      - Application
  /application/search:
    get:
      description: GetAppsByFilter applications by filter with pagination
      parameters:
      - description: Id of required city
        in: query
        name: cityId
        type: string
      - description: Id of required hotel
        in: query
        name: hotelId
        type: string
      - description: Id of required room
        in: query
        name: roomId
        type: string
      - description: status of app
        in: query
        name: string
        type: string
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of applications by filter
          schema:
            $ref: '#/definitions/docs.GetApplicationsResponse'
        "400":
          description: Invalid data for getting applications
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for reviewer
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetAppsByFilter applications
      tags:
      - Application
  /hotel/:
    get:
      description: GetHotels all hotels
      produces:
      - application/json
      responses:
        "200":
          description: Page of hotels
          schema:
            $ref: '#/definitions/docs.GetHotelsResponse'
        "400":
          description: Invalid data for getting hotels
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get hotels
      tags:
      - Hotel
    post:
      consumes:
      - application/json
      description: Creates offer with given info
      parameters:
      - description: Data for creating hotel
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.CreateHotelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created hotel data
          schema:
            $ref: '#/definitions/docs.CreateHotelResponse'
        "400":
          description: Invalid data for creating hotel
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create hotel
      tags:
      - Hotel
  /location/:
    get:
      description: GetLocations all locations
      produces:
      - application/json
      responses:
        "200":
          description: Page of locations
          schema:
            $ref: '#/definitions/docs.GetLocationsResponse'
        "400":
          description: Invalid data for getting locations
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get locations
      tags:
      - Location
    post:
      consumes:
      - application/json
      description: Creates location with given info
      parameters:
      - description: Data for creating location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.CreateLocationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created location data
          schema:
            $ref: '#/definitions/docs.CreateLocationResponse'
        "400":
          description: Invalid data for creating location
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create location
      tags:
      - Location
  /offer/:
    get:
      description: GetForPage all offers with pagination
      parameters:
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of offers
          schema:
            $ref: '#/definitions/docs.GetOffersResponse'
        "400":
          description: Invalid data for getting offers
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage offers
      tags:
      - Offer
    post:
      consumes:
      - application/json
      description: Creates offer with given info
      parameters:
      - description: Data for creating offer
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.CreateOfferRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created offer data
          schema:
            $ref: '#/definitions/docs.CreateOfferResponse'
        "400":
          description: Invalid data for creating offer
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create offer
      tags:
      - Offer
  /offer/{id}:
    get:
      description: GetForPage offer by id
      parameters:
      - description: Id of requested offer
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requested offer
          schema:
            $ref: '#/definitions/docs.OfferResponse'
        "400":
          description: Invalid data for getting offer by id
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Offer with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage by id
      tags:
      - Offer
    patch:
      consumes:
      - application/json
      description: Update offer with given id and data
      parameters:
      - description: Id of offer to update
        in: path
        name: id
        required: true
        type: string
      - description: Data for updating offer
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.UpdateOfferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated offer
        "400":
          description: Invalid data for finding offers
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Offer with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update offer
      tags:
      - Offer
  /offer/search:
    get:
      description: Find offers with given search params
      parameters:
      - description: Id of required city
        in: query
        name: cityId
        required: true
        type: string
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of offers found
          schema:
            $ref: '#/definitions/docs.GetOffersResponse'
        "400":
          description: Invalid data for finding offers
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for reviewer
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Find offers
      tags:
      - Offer
  /report/:
    get:
      description: GetForPage all reports with pagination
      parameters:
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of reports
          schema:
            $ref: '#/definitions/docs.GetReportsResponse'
        "400":
          description: Invalid data for getting reports
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage reports
      tags:
      - Report
  /report/{id}:
    get:
      description: GetForPage report by id
      parameters:
      - description: Id of requested report
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requested report
          schema:
            $ref: '#/definitions/docs.ReportResponse'
        "400":
          description: Invalid data for getting report by id
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Report with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage by id
      tags:
      - Report
    patch:
      consumes:
      - multipart/form-data
      description: Updates report with given text and photos
      parameters:
      - description: Id of report to update
        in: path
        name: id
        required: true
        type: string
      - description: Report text
        in: formData
        name: text
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update report
        "400":
          description: Invalid data for updating report
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for reviewer
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Update report
      tags:
      - Report
  /report/{id}/confirm:
    patch:
      consumes:
      - application/json
      description: Confirms or declains report
      parameters:
      - description: Id of report to update
        in: path
        name: id
        required: true
        type: string
      - description: Data for updating report
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.ConfirmReport'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update status of report
        "400":
          description: Invalid data for changing report status
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Confirm report
      tags:
      - Report
  /report/my:
    get:
      description: GetForPage all reports of current user with pagination
      parameters:
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of reports
          schema:
            $ref: '#/definitions/docs.GetReportsResponse'
        "400":
          description: Invalid data for getting reports
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: User is not reviewer
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage my reports
      tags:
      - Report
  /report/my/{id}:
    get:
      description: GetForPage report of current user by id
      parameters:
      - description: Id of requested report
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requested report
          schema:
            $ref: '#/definitions/docs.ReportResponse'
        "400":
          description: Invalid data for getting report by id
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: User is not reviewer or this report does not belong to user
          schema:
            type: string
        "404":
          description: Report with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage my by id
      tags:
      - Report
  /report/my/application/{id}:
    get:
      description: Get my report by application id
      parameters:
      - description: Id of corresponding application
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requested report
          schema:
            $ref: '#/definitions/docs.GetByApplicationIdResponse'
        "400":
          description: Invalid data for getting report by id
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: User is not reviewer or this report does not belong to user
          schema:
            type: string
        "404":
          description: Report with given id not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get by application id
      tags:
      - Report
  /report/search:
    get:
      description: GetReportsByFilter reports by filter with pagination
      parameters:
      - description: cityId if report
        in: query
        name: cityId
        type: string
      - description: hotelId of report
        in: query
        name: hotelId
        type: string
      - description: Status of report
        in: query
        name: status
        type: string
      - description: Number of page
        in: query
        name: pageNum
        required: true
        type: integer
      - description: Size of page
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Page of reports
          schema:
            $ref: '#/definitions/docs.GetReportsResponse'
        "400":
          description: Invalid data for getting reports
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetReportsByFilter reports by filter
      tags:
      - Report
  /room/:
    get:
      description: GetRooms all rooms
      produces:
      - application/json
      responses:
        "200":
          description: Page of rooms
          schema:
            $ref: '#/definitions/docs.GetRoomsResponse'
        "400":
          description: Invalid data for getting rooms
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "404":
          description: Page with given number not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get rooms
      tags:
      - Room
    post:
      consumes:
      - application/json
      description: Creates offer with given info
      parameters:
      - description: Data for creating room
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created room data
          schema:
            $ref: '#/definitions/docs.CreateRoomResponse'
        "400":
          description: Invalid data for creating room
          schema:
            type: string
        "401":
          description: Unauthorized
        "403":
          description: Only available for admin
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create offer
      tags:
      - Room
  /user/:
    get:
      description: GetForPage data of current user
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/docs.UserResponse'
        "400":
          description: Bad request to get user data
          schema:
            type: string
        "401":
          description: Unauthorized
        "404":
          description: User not found
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: GetForPage me
      tags:
      - User
  /user/log-in:
    post:
      consumes:
      - application/json
      description: Log in with given name and password
      parameters:
      - description: Data for log in
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.LogInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Auth data
          schema:
            $ref: '#/definitions/docs.AuthResponse'
        "400":
          description: Invalid data for log in
          schema:
            type: string
        "401":
          description: Wrong password
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Log in
      tags:
      - User
  /user/refresh:
    post:
      consumes:
      - application/json
      description: Refresh auth credentials via refresh token
      parameters:
      - description: Data for refresh
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Auth data
          schema:
            $ref: '#/definitions/docs.AuthResponse'
        "400":
          description: Invalid data for refresh
          schema:
            type: string
        "500":
          description: Internal server error
      summary: Refresh credentials
      tags:
      - User
  /user/sign-up:
    post:
      consumes:
      - application/json
      description: Sign up with given name and password
      parameters:
      - description: Data for sign up
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/docs.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Auth data
          schema:
            $ref: '#/definitions/docs.AuthResponse'
        "400":
          description: Invalid data for sign up
          schema:
            type: string
        "404":
          description: User not found
        "500":
          description: Internal server error
      summary: Sign up
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
