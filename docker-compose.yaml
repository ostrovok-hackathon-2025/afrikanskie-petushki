services:
  backend-app:
    container_name: backend-app
    image: backend-app
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - main
    stdin_open: true
    tty: true
    depends_on:
      - db

  db:
    container_name: postgres_secret_guest
    image: postgres:16
    restart: on-failure
    ports:
      - "5432:5432"
    networks:
      - main
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: secret-guest
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - secret-guest-pgdata:/var/lib/postgresql/data
      - ./backend/migrations/sql:/docker-entrypoint-initdb.d

  minio:
    container_name: minio_secret_guest
    image: quay.io/minio/minio:latest
    command: [ "server", "--console-address", ":9090", "/mnt/data" ]
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_DEFAULT_BUCKETS: "${MINIO_DEFAULT_BUCKETS}"
      MINIO_USE_SSL: "${MINIO_USE_SSL}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "9090:9090"
    networks:
      - main
    volumes:
      - 'minio-data:/data'

networks:
  main:

volumes:
  secret-guest-pgdata: { }
  minio-data: {}
